import api from "../../Services/transportApi";

// üîç R√©cup√©rer tous les propri√©taires
const getAll = async () => {
  try {
    console.log("üîç Appel API pour r√©cup√©rer les propri√©taires...");
    const response = await api.get("/proprietaire");
    console.log("‚úÖ Donn√©es re√ßues:", response.data);
    return response.data;
  } catch (error) {
    console.error("‚ùå Erreur API:", error.response?.data || error.message);
    throw error;
  }
};

// üì• R√©cup√©rer un propri√©taire par ID
const getById = async (id) => {
  try {
    console.log(`ID: ${id}`,);
    const response = await api.get(`/proprietaire/${id}`);
    console.log("‚úÖ Donn√©es re√ßues:", response.data);
    return response.data;
  } catch (error) {
    console.error(`‚ùå Erreur lors de la r√©cup√©ration du propri√©taire ${id}:`, error);
    throw error;
  }
};

// ‚úÖ R√©cup√©rer les propri√©taires valides
const getValides = async () => {
  try {
    const response = await api.get("/proprietaire/valide");
    return response.data;
  } catch (error) {
    console.error("‚ùå Erreur lors de la r√©cup√©ration des propri√©taires valides:", error);
    throw error;
  }
};

// ‚ùå R√©cup√©rer les propri√©taires non valides
const getNonValides = async () => {
  try {
    const response = await api.get("/proprietaire/nonvalide");
    return response.data;
  } catch (error) {
    console.error("‚ùå Erreur lors de la r√©cup√©ration des propri√©taires non valides:", error);
    throw error;
  }
};

// üîÑ Valider un propri√©taire
const valider = async (id, data = {}) => {
  try {
    console.log(`üîÑ Validation du propri√©taire ${id}...`);
    const response = await api.put(`/proprietaire/${id}`, data);
    console.log("‚úÖ Propri√©taire valid√©:", response.data);
    return response.data;
  } catch (error) {
    console.error(`‚ùå Erreur lors de la validation du propri√©taire ${id}:`, error.response?.data || error.message);
    throw error;
  }
};

// üóëÔ∏è Supprimer un propri√©taire
const supprimer = async (id) => {
  try {
    const response = await api.delete(`/proprietaire/${id}`);
    console.log(`‚úÖ Propri√©taire ${id} supprim√©`);
    return response.data;
  } catch (error) {
    console.error(`‚ùå Erreur lors de la suppression du propri√©taire ${id}:`, error);
    throw error;
  }
};

export {
  getAll,
  getById,
  getValides,
  getNonValides,
  valider,
  supprimer
};
